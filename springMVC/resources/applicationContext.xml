<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- 自动扫描bean、把作了注解的类转化成bean -->
	<!-- 该配置将扫描目录下的所有带有@Controller、@Service,@Reposity的类 -->
	<!-- 
		含属性 Use-dafault-filters 默认true
		有子标签<context:exclude-filter>、<context:include-filter> 
	-->
	<context:component-scan base-package="com.xxy.demo.*"/>
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 定义JSP文件的位置 --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:datasource-mysql.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.driverClassName}"></property>
		<property name="jdbcUrl" value="${db.url}"></property>
		<property name="user" value="${db.username}"></property>
		<property name="password" value="${db.password}"></property>
		<!-- 连接关闭时默认将所有未提交的操作回滚。默认为false -->
		<property name="autoCommitOnClose" value="${autoCommitOnClose}" />
		<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize" value="${minPoolSize}" />
		<!-- 连接池中保留的最大连接数。默认为15 -->
		<property name="maxPoolSize" value="${maxPoolSize}" />
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。默认为3 -->
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<!-- 最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0秒 -->
		<property name="maxIdleTime" value="${maxIdleTime}" />
		<!-- 当连接池中的连接用完时，C3P0一次性创建新连接的数目。默认为3 -->
		<property name="acquireIncrement" value="${acquireIncrement}" />
		<!-- 定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30 -->
		<property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
		<!-- 当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒，默认为0 -->
		<property name="checkoutTimeout" value="${checkoutTimeout}" />
	</bean>
	
	<!-- 将所有具有@Transactional注解的Bean自动配置为声明式事务支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<!-- 该处配置动态实现DAO层接口,多个文件目录以逗号隔开 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xxy.demo.dao" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource" />
	 </bean>
	
	<!-- 支持上传文件 -->
	 <!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>52428800</value>上传文件大小限制为50M
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean> -->
	
	<!-- 注入方法时使用 -->
	<!-- 
	<bean id="SpringApplicationContext" class="com.xxy.base.ApplicationContextHelper"></bean>
	 -->
</beans>